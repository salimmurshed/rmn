part of 'all_events_bloc.dart';

@freezed
class AllEventsWithInitialState with _$AllEventsWithInitialState {
  const factory AllEventsWithInitialState({
    required List<EventData> allEventsData,
    required List<EventData> upcoming,
    required List<EventData> past,
    required List<EventData> miscellaneous,
    required bool isFailure,
    required bool isLoading,
    required bool isLoadingList,
    required bool isRefreshRequired,
    required String message,
    required FilterType filterType,
    required bool isFilterOn,
    required bool isFilterOnForList,
    required bool isSearchModeOn,
    required TextEditingController searchController,
    required TextEditingController searchControllerForList,
    required ScrollController scrollController,
    required FocusNode focusNode,
    required bool showEraser,
    required bool showEraserForEraser,
    required num page,
    required num totalPage,
    required LatLng? userLocation,
    required String searchKeyForNoResult,
    required String googleDarkMapStyle,
    required List<MarkerData> customMarkers,
    required GlobalKey<FormState> formKey,
    required GlobalKey<FormState> formKeyForList,
    required LatLng initialCameraPosition,
  }) = _AllEventsWithInitialState;

  factory AllEventsWithInitialState.initial() => AllEventsWithInitialState(
      message: AppStrings.global_empty_string,
      googleDarkMapStyle: globalDarkMapStyle,
      searchKeyForNoResult: AppStrings.global_empty_string,
      isFailure: false,
      isLoading: true,
      isLoadingList: true,
      showEraser: false,
      showEraserForEraser: false,
      initialCameraPosition: const LatLng(0, 0),
      isRefreshRequired: false,
      filterType: FilterType.upcoming,
      searchController: TextEditingController(),
      searchControllerForList: TextEditingController(),
      focusNode: FocusNode(),
      isFilterOn: false,
      formKey: GlobalKey<FormState>(),
      formKeyForList: GlobalKey<FormState>(),
      isFilterOnForList: true,
      isSearchModeOn: false,
      scrollController: ScrollController(),
      page: 1,
      totalPage: 1,
      allEventsData: [],
      upcoming: [],
      past: [],
      userLocation: null,
      customMarkers: [],
      miscellaneous: []);
}

