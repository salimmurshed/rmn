part of 'event_details_bloc.dart';

@freezed
class EventDetailsWithInitialState with _$EventDetailsWithInitialState {
  const factory EventDetailsWithInitialState({
    required String message,
    required String eventStatusMessage,
    required bool isLoading,
    required String regsLink,
    required bool isRefreshedRequired,
    required bool isFailure,
    required num athleteCount,
    required String coverImage,
    required String eventTitle,
    required String eventLocation,
    required String eventDateTime,
    required String eventDescription,
    required String locationDateTime,
    required bool isShorten,
    required String eventInformation,
    required RegistrationTab? registrationTabList,
    required List<RegistrationListData> data,
    required EventStatus eventStatus,
    required List<String> tabButtonTitles,
    required List<String> divisionTabTitles,
    required List<Athlete> eventWiseAthletes,
    required List<DivisionTypes> divisionsTypes,
    required List<Award> awards,
    required List<Products> products,
    required List<Hotels> hotels,
    required String scheduleOverView,
    required List<ScheduleGroupedList> schedules,
    required int tabIndex,
    required int scheduleTileIndex,
    required int selectedDivisionIndex,
    required int divisionTabIndex,
    required TextEditingController searchController,
    required FocusNode focusNode,
    required bool showEraser,
    required EventResponseData? eventResponseData,
    required WeightInGuidelines? weightInGuidelines,
    required List<String> availableWeightsInStringByStyle,
    required List<String> stylesTitles,
    required int styleIndex,
    required int parentIndex,
    required int childIndex,
    required int athleteIndex,
    required AgeGroups? selectedAgeGroup,
    required bool isRegistrationButtonActive,
    required AthleteSelectionTabs athleteSelectionTabs,
    required List<Athlete> readyForRegistrationAthletes,
    required List<RegistrationListData> searchedData,
    required CouponModules couponModule,
    required int selectionCounter,
    required String assetUrl,
  }) = _EventDetailsWithInitialState;

  factory EventDetailsWithInitialState.initial() =>
      EventDetailsWithInitialState(
        athleteSelectionTabs: AthleteSelectionTabs.selectedAthletes,
          isFailure: false,
          selectedDivisionIndex: 0,
          isLoading: true,
          focusNode: FocusNode(),
          searchController:  TextEditingController(),
          showEraser: false,
          assetUrl: AppStrings.global_empty_string,
          regsLink: AppStrings.global_empty_string,
          eventStatusMessage: AppStrings.global_empty_string,
          parentIndex: 0,
          childIndex: 0,
          athleteCount: 0,
          isShorten: false,
          eventWiseAthletes: const [],
          readyForRegistrationAthletes: const [],
          availableWeightsInStringByStyle: const [],
          stylesTitles: const [],
          styleIndex: 0,
          isRegistrationButtonActive: false,
          eventStatus: EventStatus.none,
          eventResponseData: null,
          isRefreshedRequired: false,
          locationDateTime: AppStrings.global_empty_string,
          message: AppStrings.global_empty_string,
          scheduleOverView: AppStrings.global_empty_string,
          eventInformation: AppStrings.global_empty_string,
          coverImage: AppStrings.global_empty_string,
          eventTitle: AppStrings.global_empty_string,
          eventLocation: AppStrings.global_empty_string,
          eventDateTime: AppStrings.global_empty_string,
          eventDescription: AppStrings.global_empty_string,
          registrationTabList: null,
          weightInGuidelines: null,
          tabIndex: 0,
          divisionTabIndex: 0,
          scheduleTileIndex: -1,
          divisionsTypes: const [],
          products: const [],
          schedules: const [],
          hotels: const [],searchedData: [],
          data: const [],
          awards: const [],
          selectedAgeGroup: null,
          couponModule: CouponModules.none,
          athleteIndex: -1,
          selectionCounter: 0,
          divisionTabTitles: const [
            AppStrings
                .eventDetailView_divisionTab_weightInGuideLines_tabButtonTitle,
            AppStrings.eventDetailView_divisionTab_divsions_tabButtonTitle,
          ],
          tabButtonTitles: const [
            AppStrings.eventDetailView_information_tabButtonTitle,
            AppStrings.eventDetailView_registrationList_tabButtonTitle,
            AppStrings.eventDetailView_divisions_tabButtonTitle,
            AppStrings.eventDetailView_schedule_tabButtonTitle,
            AppStrings.eventDetailView_hotels_tabButtonTitle,
            AppStrings.eventDetailView_awards_tabButtonTitle,
            AppStrings.eventDetailView_products_tabButtonTitle,
          ]);
}



class ScheduleGroupedList{
  String day;
  String monthDate;
  List<Schedules> schedules;
  ScheduleGroupedList({required this.day, required this.monthDate, required this.schedules});
}