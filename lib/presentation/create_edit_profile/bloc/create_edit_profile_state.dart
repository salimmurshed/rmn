part of 'create_edit_profile_bloc.dart';

@freezed
class CreateEditProfileWithInitialState
    with _$CreateEditProfileWithInitialState {
  const factory CreateEditProfileWithInitialState({
    required String message,
    required String label,
    required bool isLoading,
    required bool isOldObscure,
    required bool isChangePasswordActive,
    required bool? isRedshirt,
    required bool isNewObscure,
    required bool isConfirmObscure,
    required bool isUpdateButtonActive,
    required bool isFailure,
    required List<Team> teams,
    required bool isAthleteEdited,
    required GlobalKey<State<StatefulWidget>> dropDownKey,
    required GlobalKey<State<StatefulWidget>> dropDownKeyForGrade,
    required bool isProfileCreated,
    required bool isExploreOpened,
    required bool isAddAthleteSelected,
    required bool isVerifyBtnActive,
    required bool isSocialId,
    required bool isUpdateBtnActive,
    required String? selectedTeam,
    required String? selectedGrade,
    required String title,
    required CreateProfileTypes createProfileTypes,
    required TextEditingController firstNameEditingController,
    required TextEditingController lastNameEditingController,
    required TextEditingController emailEditingController,
    required TextEditingController changeEmailEditingController,
    required TextEditingController contactNumberEditingController,
    required TextEditingController dateOfBirthEditingController,
    required TextEditingController postalAddressEditingController,
    required TextEditingController findOtherTeamNames,
    required TextEditingController zipCodeEditingController,
    required TextEditingController weightEditingController,
    required TextEditingController searchController,
    required TextEditingController oldPasswordController,
    required TextEditingController newPasswordController,
    required TextEditingController confirmPasswordController,
    required FocusNode firstNameFocusNode,
    required FocusNode lastNameFocusNode,
    required FocusNode emailFocusNode,
    required FocusNode contactNumberFocusNode,
    required FocusNode findOtherTeamNamesFocusNode,
    required FocusNode dateOfBirthFocusNode,
    required FocusNode postalAddressFocusNode,
    required FocusNode zipCodeFocusNode,
    required FocusNode weightFocusNode,
    required FocusNode oldFocusNode,
    required FocusNode newFocusNode,
    required FocusNode confirmFocusNode,
    required FocusNode changeEmailFocusNode,
    required bool isRefreshRequired,
    required String? firstNameError,
    required String? lastNameError,
    required String? emailError,
    required String? dateError,
    required String? weightError,
    required String? contactNumberError,
    required String? postalAddressError,
    required String? zipError,
    required String? gradeError,
    required bool isContactNumberValid,
    required bool isGuardian,
    required File? file,
    required int radioButtonIndex,
    required String city,
    required String errorForInvalidField,
    required String imageUrl,
    required String teamId,
    required String gradeValue,
    required String state,
    required Athlete? athlete,
    required GlobalKey<FormState> formKey,
    required String buttonName,
    required GlobalKey<FormState> formKeyForChangePassword,
    required bool isAtLeastEightCharChecked,
    required bool isAtLeastOneLowerCaseChecked,
    required bool isAtLeastOneUpperCaseChecked,
    required bool isAtLeastOneDigitChecked,
    required bool isAtLeastOneSpecialCharChecked,
    required bool isPasswordCheckerHidden,
    required bool isCreateButtonActive,
  }) = _CreateEditProfileWithInitialState;

  factory CreateEditProfileWithInitialState.initial() =>
      CreateEditProfileWithInitialState(
        isFailure: false,
        isLoading: true,
        isGuardian: false,
        isUpdateButtonActive: false,
        isOldObscure: true,
        isNewObscure: true,
        isRedshirt: null,
        gradeError: null,
        isCreateButtonActive: true,
        isConfirmObscure: true,
        isSocialId: false,
        isChangePasswordActive: false,
        isAthleteEdited: false,
        isVerifyBtnActive: false,
        isUpdateBtnActive: false,
        isAddAthleteSelected: false,
        isProfileCreated: false,
        isAtLeastEightCharChecked: false,
        isPasswordCheckerHidden: true,
        isAtLeastOneLowerCaseChecked: false,
        isAtLeastOneUpperCaseChecked: false,
        isAtLeastOneDigitChecked: false,
        isAtLeastOneSpecialCharChecked: false,
        isContactNumberValid: true,
        athlete: null,
        errorForInvalidField: AppStrings.global_empty_string,
        isExploreOpened: false,
        createProfileTypes: CreateProfileTypes.none,
        message: AppStrings.global_empty_string,
        title: AppStrings.global_empty_string,
        label: AppStrings.global_empty_string,
        city: AppStrings.global_empty_string,
        state: AppStrings.global_empty_string,
        buttonName: AppStrings.global_empty_string,
        dropDownKey: GlobalKey<State<StatefulWidget>>(),
        dropDownKeyForGrade: GlobalKey<State<StatefulWidget>>(),
        imageUrl: AppStrings.global_empty_string,
        teamId: '0',
        selectedTeam: null,
        selectedGrade: null,
        file: null,
        teams: globalTeams,
        radioButtonIndex: 0,
        firstNameEditingController: TextEditingController(),
        findOtherTeamNames: TextEditingController(),
        lastNameEditingController: TextEditingController(),
        emailEditingController: TextEditingController(),
        changeEmailEditingController: TextEditingController(),
        contactNumberEditingController: TextEditingController(),
        dateOfBirthEditingController: TextEditingController(),
        postalAddressEditingController: TextEditingController(),
        zipCodeEditingController: TextEditingController(),
        weightEditingController: TextEditingController(),
        searchController: TextEditingController(),
        firstNameFocusNode: FocusNode(),
        lastNameFocusNode: FocusNode(),
        emailFocusNode: FocusNode(),
        changeEmailFocusNode: FocusNode(),
        contactNumberFocusNode: FocusNode(),
        findOtherTeamNamesFocusNode: FocusNode(),
        dateOfBirthFocusNode: FocusNode(),
        postalAddressFocusNode: FocusNode(),
        zipCodeFocusNode: FocusNode(),
        weightFocusNode: FocusNode(),
        oldPasswordController: TextEditingController(),
        newPasswordController: TextEditingController(),
        confirmPasswordController: TextEditingController(),
        oldFocusNode: FocusNode(),
        newFocusNode: FocusNode(),
        confirmFocusNode: FocusNode(),
        isRefreshRequired: false,
        formKey: GlobalKey<FormState>(),
        formKeyForChangePassword: GlobalKey<FormState>(),
        firstNameError: null,
        lastNameError: null,
        gradeValue: AppStrings.global_empty_string,
        emailError: null,
        contactNumberError: null,
        postalAddressError: null,
        weightError: null,
        dateError: null,
        zipError: null,
      );
}
